class Solution {
    public int minTotalDistance(int[][] grid) {
        if (grid == null || grid.length == 0) {
            return 0;
        }
        int m = grid.length;
        int n = grid[0].length;
        if (n == 0) {
            return 0;
        }
        
        int k = 0;
        int[] x = new int[m];
        int[] y = new int[n];
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[i][j] == 1) {
                    x[i]++;
                    y[j]++;
                    k++;
                }
            }
        }
        
        int m_x = getMedium(x, k/2);
        int m_y = getMedium(y, k/2);

        return getDist(x, m_x) + getDist(y, m_y);
    }
    
    private int getMedium(int[] nums, int m) {
        int sum = 0;
        for (int i = 0; i < nums.length; i++) {
            sum += nums[i];
            if (sum > m) {
                return i;
            }
        }
        return 0;
    }
    
    private int getDist(int[] nums, int m) {
        int dist = 0;
        for (int i = 0; i < nums.length; i++) {
            dist += nums[i] * Math.abs(i - m);
        }
        return dist;
    }
}
