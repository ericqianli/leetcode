/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> ret = new ArrayList<Integer>();
        if (root == null) {
            return ret;
        }
        
        Stack<TreeNode> stack = new Stack<TreeNode>();
        stack.push(root);
        while (!stack.isEmpty()) {
            TreeNode node = stack.peek();
            if (node.left != null) {
                TreeNode left = node.left;
                node.left = null;
                stack.push(left);
            } else { // left child is null
                ret.add(node.val);
                node = stack.pop();
                if (node.right != null) {
                    stack.push(node.right);
                }
            }
        }
        return ret;
    }
}
