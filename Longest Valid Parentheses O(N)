class Solution {
    public int longestValidParentheses(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        int len = s.length();
        int left = 0;
        int right = 0;
        int max = 0;
        for (int i = 0; i < len; i++) {
            char c = s.charAt(i);
            if (c == '(') {
                left++;
            } else  if (c == ')') {
                right ++;
            }
            if (left == right) {
                int temp = left + right;
                if (temp > max) {
                    max = temp;
                }
            } else if (right > left) {
                left = 0;
                right = 0;
            }
        }
        left = 0;
        right = 0;
        for (int i = len - 1; i >= 0; i--) {
            char c = s.charAt(i);
            if (c == ')') {
                right++;
            } else  if (c == '(') {
                left ++;
            }
            if (left == right) {
                int temp = left + right;
                if (temp > max) {
                    max = temp;
                }
            } else if (right < left) {
                left = 0;
                right = 0;
            }
        }
        return max;
    }
}
