class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        if (s1 == null || s2 == null || s3 == null) {
            return false;
        }
        if (s1.isEmpty()) {
            return s2.equals(s3);
        }
        if (s2.isEmpty()) {
            return s1.equals(s3);
        }
        
        int m = s1.length();
        int n = s2.length();
        
        if (s3.length() != (m + n)) {
            return false;
        }
        
        boolean map[][] = new boolean[m+1][n+1];
        map[0][0] = true;
        
        for (int i = 0; i <= m; i++) {
            for (int j = 0; j <= n; j++) {
                if (i + j == 0) {
                    continue;
                }
                char c = s3.charAt(i + j -1);
                if (i > 0 && s1.charAt(i-1) == c && map[i-1][j]) {
                    map[i][j] = true;
                } else if (j > 0 && s2.charAt(j-1) == c && map[i][j-1]) {
                    map[i][j] = true;
                }
            }
        }
        
        return map[m][n];
    }
}
