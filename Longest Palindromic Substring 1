class Solution {
    public String longestPalindrome(String s) {
        if (s == null) {
            return "";
        }
        int len = s.length();
        int max_len = 0;
        int max_left = 0;
        int max_right = 0;
        for (int i = 0; i < len; i++) {
            int left = i - 1;
            int right = i + 1;
            int current_len = 1;
            while (left >= 0 && right < len) {
                if (s.charAt(left) == s.charAt(right)) {
                    current_len += 2;
                    left --;
                    right ++;
                } else {
                    break;
                }
            }
            if (current_len > max_len) {
                max_len = current_len;
                max_left = left + 1;
                max_right = right;
            }
        }
        for (int i = 0; i < len; i++) {
            int left = i;
            int right = i + 1;
            int current_len = 0;
            while (left >= 0 && right < len) {
                if (s.charAt(left) == s.charAt(right)) {
                    current_len += 2;
                    left --;
                    right ++;
                } else {
                    break;
                }
            }
            if (current_len > max_len) {
                max_len = current_len;
                max_left = left + 1;
                max_right = right;
            }
        }
        return s.substring(max_left, max_right);
    }
}
