class Solution {
    public int minTotalDistance(int[][] grid) {
        if (grid == null || grid.length == 0) {
            return 0;
        }
        int m = grid.length;
        int n = grid[0].length;
        if (n == 0) {
            return 0;
        }
        
        int k = 0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[i][j] == 1) {
                    k++;
                }
            }
        }
        
        int count = 0;
        int m_x = -1;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[i][j] == 1) {
                    count++;
                }
                if (count > k / 2) {
                    m_x = i;
                    break;
                }
            }
            if (m_x != -1) {
                break;
            }
        }

        count = 0;
        int m_y = -1;
        for (int j = 0; j < n; j++) {
            for (int i = 0; i < m; i++) {
                if (grid[i][j] == 1) {
                    count++;
                }
                if (count > k / 2) {
                    m_y = j;
                    break;
                }
            }
            if (m_y != -1) {
                break;
            }
        }

        int dist = 0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (grid[i][j] == 1) {
                    dist += Math.abs(i - m_x) + Math.abs(j - m_y);
                }
            }
        }
        
        return dist;
    }
}
