/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        if (headA == null || headB == null) {
            return null;
        }
        ListNode t1 = headA;
        ListNode t2 = headB;
        while (t1 != null && t2 != null) {
            t1 = t1.next;
            t2 = t2.next;
        }
        while (t1 != null) {
            t1 = t1.next;
            headA = headA.next;
        }
        while (t2 != null) {
            t2 = t2.next;
            headB = headB.next;
        }
        while (headA != null && headB != null) {
            if (headA == headB) {
                return headA;
            }
            headA = headA.next;
            headB = headB.next;
        }
        return null;
    }
}
