class Solution {
    
    Set<List<Integer>> ret;
    
    public List<List<Integer>> threeSum(int[] nums) {
        ret = new HashSet<List<Integer>>();
        
        if (nums == null || nums.length == 0) {
            return new ArrayList<List<Integer>>(ret);
        }
        
        int len = nums.length;
        Arrays.sort(nums);
        
        for (int i = 0; i < len; i++) {
            int j = i + 1;
            int k = len - 1;
            while (j < k) {
                int sum = nums[i] + nums[j] + nums[k];
                if (sum > 0) {
                    k--;
                } else if (sum < 0) {
                    j++;
                } else { // sum == 0
                    List<Integer> temp = new ArrayList<Integer>();
                    temp.add(nums[i]);
                    temp.add(nums[j]);
                    temp.add(nums[k]);
                    ret.add(temp);
                    if (nums[j] == nums[k]) {
                        break;
                    }
                    while (nums[j] == nums[j+1]) {
                        j++;
                    }
                    j++;
                    while (nums[k] == nums[k-1]) {
                        k--;
                    }
                    k--;
                }
            }
        }
        
        return new ArrayList<List<Integer>>(ret);
    }
}
