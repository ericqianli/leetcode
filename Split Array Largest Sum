class Solution {
    public int splitArray(int[] nums, int m) {
        if (nums == null || nums.length == 0 || m <= 0) {
            return 0;
        }
        int len = nums.length;
        int[][] dp = new int[len + 1][m + 1];
        
        int[] sum = new int[len + 1];
        for (int i = 1; i <= len; i++) {
            sum[i] = sum[i - 1] + nums[i - 1];
        }
        
        // init
        for (int j = 0; j <= m; j++) {
            dp[0][j] = Integer.MAX_VALUE;
        }
        for (int i = 0; i <= len; i++) {
            dp[i][0] = Integer.MAX_VALUE;
            dp[i][1] = sum[i];
        }
        
        // propogation
        for (int i = 1; i <= len; i++) {
            for (int j = 2; j <= m; j++) {
                int min = Integer.MAX_VALUE;
                for (int k = 1; k < i; k++) {
                    min = Math.min(Math.max(sum[i] - sum[k], dp[k][j - 1]), min);
                }
                dp[i][j] = min;
            }
        }
        
        return dp[len][m];
    }
}
