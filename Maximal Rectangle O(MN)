class Solution {
    public int maximalRectangle(char[][] matrix) {
        if (matrix == null) {
            return 0;
        }
        int m = matrix.length;
        if (m == 0) {
            return 0;
        }
        int n = matrix[0].length;
        if (n == 0) {
            return 0;
        }
        
        int max_area = 0;
        int[] left = new int[n];
        int[] right = new int[n];
        int[] height = new int[n];
        for (int i = 0; i < n; i++) {
            right[i] = n;
        }
        for (int i = 0; i < m; i++) {
            int cur_left = 0;
            for (int j = 0; j < n; j++) {
                if (matrix[i][j] == '1') {
                    height[j]++;
                    left[j] = Math.max(left[j], cur_left);
                } else {
                    height[j] = 0;
                    left[j] = 0;
                    cur_left = j + 1;
                }
            }
            int cur_right = n;
            for (int j = n-1; j >= 0; j--) {
                if (matrix[i][j] == '1') {
                    right[j] = Math.min(right[j], cur_right);
                } else {
                    right[j] = n;
                    cur_right = j;
                }
            }
            for (int j = 0; j < n; j++) {
                int area = height[j] * (right[j] - left[j]);
                max_area = Math.max(max_area, area);
            }
        }
        
        return max_area;
    }
}
