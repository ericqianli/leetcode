class Solution {
    public int threeSumSmaller(int[] nums, int target) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        int count = 0;
        Arrays.sort(nums);
        int len = nums.length;
        for (int i = 0; i < len - 2; i++) {
            for (int j = i + 1; j < len - 1; j++) {
                int k = binarySearch(nums, j + 1, len - 1, target - nums[i] - nums[j]);
                if (k > j) {
                    count += k - j;
                }
            }
        }
        return count;
    }
    
    public int binarySearch(int[] nums, int start, int end, int target) { // inclusive start and end
        if (start > end) {
            return -1;
        }
        if (start == end) {
            if (nums[start] < target) {
                return start;
            }
            return -1;
        }
        int mid = (start + end + 1) / 2;
        if (nums[mid] < target) {
            return binarySearch(nums, mid, end, target);
        } else {
            return binarySearch(nums, start, mid - 1, target);
        }
    }
}
